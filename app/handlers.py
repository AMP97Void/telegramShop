from aiogram import F, Router
from aiogram.types import Message 
from aiogram.filters import CommandStart, Command
from aiogram.types import FSInputFile, CallbackQuery
import sqlite3
import app.keyboard as kb 
import app.database.request as rq

router = Router()


# –ö–û–ú–ê–ù–î–´ COMMANDS

@router.message(CommandStart())
async def start(message: Message):
    
    
    
    usName = message.from_user.first_name
    usId = message.from_user.id
    us = message.from_user.username
    
    replenishemt = '0'
    usPseudonim = ' '
    tag = ' '
    
    bonuce = 0
    balance = 0
    
    # tg_id: int, name: str, userId: str, data: datetime, money: int, bonuce: int, username: str
    
    reg = await rq.set_user(tg_id = message.from_user.id,
                      name = message.from_user.first_name,
                      username = message.from_user.username
                      )
    
    if reg:
        await message.answer('üí≠–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é?', reply_markup=kb.markup)
    
    user_id = message.from_user.id
    chekadmin = await rq.chekAdmin(tg_id = user_id)
    if chekadmin:
        await message.answer(f'‚ú®–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n\nüî∏–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.\n'
                             'üî∏–í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∞ –±–æ—Ç–∞\n'
                             'üî∏–ï—Å–ª–∏ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏\n'
                             'üî∏–í–≤–µ–¥–∏—Ç–µ /start'
                             'üî∏–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π /ahelp\n'
                             'üî∏–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è!'
                             'üåê –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ - @A006MP\\_97\n\n'
                             'üî∏–û—Å–Ω–æ–≤–Ω–æ–π –¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª: [–ü–µ—Ä–µ–π—Ç–∏](https://t.me/+6LOgd170w04xZWVi)'
                             '[üí≠–û—Ç–∑—ã–≤—ã –ü–æ–∫—É–ø–∞—Ç–µ–ª–µ–π](https://t.me/+gYkK90TrceQ3MDli)', parse_mode='Markdown', disable_web_page_preview=True,
                             reply_markup=kb.reply_apanel)
    else:
        await message.answer(f'‚ú®–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}!\n\n'
                             'üî∏–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.\n'
                             'üî∏–ï—Å–ª–∏ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏\n'
                             'üî∏–í–≤–µ–¥–∏—Ç–µ /start\nüî∏–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: /help\n'
                             'üî∏–û—Å–Ω–æ–≤–Ω–æ–π –¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª: [–ü–µ—Ä–µ–π—Ç–∏](https://t.me/+6LOgd170w04xZWVi)'
                             '\nüåê –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ - @A006MP\\_97\n\n'
                             '[üí≠–û—Ç–∑—ã–≤—ã –ü–æ–∫—É–ø–∞—Ç–µ–ª–µ–π](https://t.me/+gYkK90TrceQ3MDli)', parse_mode='Markdown', disable_web_page_preview=True, 
                             reply_markup=kb.user_keyboard)
    
@router.callback_query(F.data.startswith('category_'))
async def categorz(callback: CallbackQuery):
    category_id = int(callback.data.split('_')[1])
    await callback.answer()
    await callback.message.answer(
        '–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:',
        reply_markup=await kb.categorie(category_id)
    )

@router.callback_query(F.data.startswith('category2_'))
async def category(callback: CallbackQuery):
    category2_id = int(callback.data.split('_')[1])
    await callback.answer()
    await callback.message.answer(
        '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é!\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:',
        reply_markup=await kb.products(category2_id)
    )

@router.callback_query(F.data.startswith('product_'))
async def product_info(callback: CallbackQuery):
    item_id = int(callback.data.split('_')[1])
    item_data = await rq.get_item(item_id)
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä')
    await callback.message.answer(
        f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:\n'
        f'‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n'
        f'üè∑ –ù–∞–∑–≤–∞–Ω–∏–µ: *{item_data.name}*\n\n'
        f'üçì –í–∫—É—Å: {item_data.taste}\n'
        f'üí™ –ö—Ä–µ–ø–∫–æ—Å—Ç—å: {item_data.strenght}\n'
        f'üí∞ *–°—Ç–æ–∏–º–æ—Å—Ç—å: {item_data.price}*\n'
        f'üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item_data.quantity}\n'
        f'üìú –û–ø–∏—Å–∞–Ω–∏–µ: {item_data.description}\n\n'
        '–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ [–ê–¥–º–∏–Ω—É](https://t.me/A006MP_97)\n\n'
        '[üí≠–û—Ç–∑—ã–≤—ã –ü–æ–∫—É–ø–∞—Ç–µ–ª–µ–π](https://t.me/+gYkK90TrceQ3MDli)',
        parse_mode='Markdown',
        disable_web_page_preview=True, reply_markup=kb.reply_comeback
    )
    
    
@router.callback_query(F.data == 'go_back')
async def menu(callback: CallbackQuery):
    await callback.message.delete()

@router.message(Command("help"))
async def menu(message: Message):
    await message.answer('–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º:\n\n    ‚úÖ /start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n    ‚ùì /help - –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –ø–æ–º–æ—â–∏\n    ‚öôÔ∏è /ahelp - –ü–∞–Ω–µ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \n    üõ† /support  - –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞\n    üîç /search - –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n    üì© /send - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É')
    
@router.message(Command('list'))
async def listmenu(message: Message):
    photo = FSInputFile(r"C:\Users\dmitr\Desktop\Aiogramm\photos\listPhoto.jpg")
    await message.answer_photo(photo)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞!", reply_markup = kb.reply_categories)
# –öO–õ–õ–ë–ï–ö–ò CALLBACK

@router.message(Command("support"))
async def support(message: Message):
    photoSup = FSInputFile(r"C:\Users\dmitr\Desktop\Aiogramm\photos\adminPhoto.jpg")
    await message.answer_photo(photoSup,'*–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ä–∞–∑–¥–µ–ª –±–æ—Ç–∞:\n\n*'
                     'üë• *–ö–æ–Ω—Ç–∞–∫—Ç—ã:*'
                     '\nüßñüèª [–¢–µ—Ö. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä](https://t.me/A006MP_97)'
                     '\n\n_–ï—Å–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –∫–∞–∫—É—é-—Ç–æ –æ—à–∏–±–∫—É –∏–ª–∏ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–æ –ø—Ä–æ—Å—å–±–∞ —Å–æ–æ–±—â–∏—Ç—å –æ–± —ç—Ç–æ–º!_'
                     '\n_–í–µ—Ä—Å–∏—è –±–æ—Ç–∞_ *1.0*', parse_mode = 'Markdown') 
    
    
    
# –ö–ù–û–ü–ö–ò BUTTONS

@router.message()
async def reply_to_buttons(message: Message):
    if message.text == "üí≥ –ó–∞–∫–∞–∑–∞—Ç—å":
        await message.answer("–ö–Ω–æ–ø–∫–∞ *–∑–∞–∫–∞–∑–∞—Ç—å* –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞", parse_mode = 'markdown')
    elif message.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å":
        photoHelp = FSInputFile(r"C:\Users\dmitr\Desktop\Aiogramm\photos\rulesPhoto.jpg")
        await message.answer_photo(photoHelp,'üë•*–ö–æ–Ω—Ç–∞–∫—Ç—ã:*'
                     '\n üßñüèª[–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä](https://t.me/A006MP_97)'
                     '\n\nüì¢*–°—Å—ã–ª–∫–∏:*'
                     '\n üî•[–ö–∞–Ω–∞–ª –º–∞–≥–∞–∑–∏–Ω–∞](https://t.me/+6LOgd170w04xZWVi)'
                     '\n üî•[–û—Ç–∑—ã–≤—ã](https://t.me/+gYkK90TrceQ3MDli)'
                     '\n\n‚ùóÔ∏è *–ü—Ä–∞–≤–∏–ª–∞:*'
                     '\n\n*1.*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–µ–Ω, —á—Ç–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–æ 1 —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è.'
                     '\n\n*1.1* –§–ª—É–¥, –º–∞—Ç, –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è, –Ω–µ–≤–µ–∂–ª–∏–≤–æ–µ –æ–±—â–µ–Ω–∏–µ, –≤–≤–µ–¥–µ–Ω–∏–µ –≤ –∑–∞–±–ª—É–∂–¥–µ–Ω–∏–µ, –æ–±–º–∞–Ω - –ø—Ä–∏—á–∏–Ω—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏/–¥–æ—Å—Ç—É–ø–∞ –∫ –±–æ—Ç—É –±–µ–∑ –¥–∞–ª—å–Ω–µ–π—à–µ–π –ø–æ–º–æ—â–∏ –≤ —Ä–∞–∑–±–∏—Ä–∞—Ç–µ–ª—å—Å—Ç–≤–µ –≤–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã.'
                     '\n\n*1.2* –ö—É–ø–ª–µ–Ω–Ω—ã–π –∏ –ø–æ–∑–∂–µ –≤—Å–∫—Ä—ã—Ç—ã–π –≤–∞–º–∏ —Ç–æ–≤–∞—Ä –Ω–µ –ø–æ–¥–ª–µ–∂–∏—Ç –≤–æ–∑–≤—Ä–∞—Ç—É! –ï—Å–ª–∏ –í—ã –∫—É–ø–∏–ª–∏ —Ç–æ–≤–∞—Ä, –Ω–æ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –∑–∞—Ö–æ—Ç–µ–ª–∏ –ø–æ–º–µ–Ω—è—Ç—å –≤–∫—É—Å, –Ω–µ –æ—Ç–∫—Ä—ã–≤ —É–ø–∞–∫–æ–≤–∫—É –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º —Ä–µ—à–∏—Ç—å —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É.'
                     '\n\n *1.3* –û–ø–ª–∞—Ç–∞ —Ç–æ–≤–∞—Ä–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–Ω—ã–º–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞–º–∏ –∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ª–∏—á–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏. –ü–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π —Ç–æ–≤–∞—Ä–∞ –Ω–µ–ª—å–∑—è –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ–≥–æ.'
                     '\n\n *1.4* –ó–∞ –ª—é–±—ã–µ –ø–æ–ø—ã—Ç–∫–∏ —Å–ª–æ–º–∞—Ç—å –±–æ—Ç–∞ –∏–ª–∏ —á–µ—Ä–µ–∑–º–µ—Ä–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∑–∞–∫–∞–∑–∞—Ö - –±—É–¥–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –¥–æ—Å—Ç—É–ø, –∫–∞–∫ –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ, —Ç–∞–∫ –∏ –∫ –¥–æ—Å—Ç—É–ø—É –±–æ—Ç–∞.'
                     '\n\n *1.5* –ú–µ—Å—Ç–∞ –≤—Å—Ç—Ä–µ—á —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –∏ —É –Ω–∞—Å –Ω–µ—Ç—É —Ç–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –∫–∞–∫ –¥–æ—Å—Ç–∞–≤–∫–∞. –¢–∞–∫ —á—Ç–æ –ø—Ä–æ—Å—å–±–∞ –Ω–µ –ø–∏—Å–∞—Ç—å —Å –ø—Ä–æ—Å—å–±–∞–º–∏ –ø—Ä–∏–≤–µ–∑—Ç–∏ —Ç–æ–≤–∞—Ä –∫ –≤–∞—à–µ–º—É –¥–æ–º–∞ –∏ —Ç–¥.'
                     '\n',parse_mode = 'markdown')
    elif message.text == "üìÉ –°–ø–∏—Å–æ–∫":
        photo = FSInputFile(r"C:\Users\dmitr\Desktop\Aiogramm\photos\listPhoto.jpg")
        await message.answer_photo(photo)
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞', reply_markup=await kb.categories())
        
    elif message.text == "üíª –ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª—å":
        user_id = message.from_user.id
        chekadmin = await rq.chekAdmin(tg_id = user_id)
        if chekadmin:
            await message.answer("–í—ã –≤–æ—à–ª–∏ –≤ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!", reply_markup=kb.apanel)
        else:
            await message.answer("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –≤–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞...")

# –öO–õ–õ–ë–ï–ö–ò CALLBACK

@router.callback_query(F.data == "call")
async def firstInfo(callback: CallbackQuery):
    await callback.message.edit_text('<b>      –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>'
                                      '\n<i> –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞, –º—ã —Å–æ–∑–¥–∞–ª–∏ —ç—Ç–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–∞! '
                                      '–ó–¥–µ—Å—å –í—ã —Å–º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤–µ—Å—å —Ç–æ–≤–∞—Ä, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–≥–æ –Ω–∞–ª–∏—á–∏—è, –∞ —Ç–∞–∫–∂–µ –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–∑–∞–∫–∞–∑. '
                                      '–ü–æ—Å–ª–µ –ø—Ä–µ–¥–∑–∞–∫–∞–∑–∞ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—Å—è —Å –≤–∞–º–∏ –æ –≤—Å—Ç—Ä–µ—á–µ! '
                                      '–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –∂–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ä–∞–±–æ—Ç–æ–π –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞, –ø—Ä–æ—Å–∏–º —Å–æ–æ–±—â–∏—Ç—å –æ–± —ç—Ç–æ–º –Ω–∞–º!'
                                      ' –î–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∂–µ —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ –ø—Ä—è–º–æ –≤ –±–æ—Ç–µ, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–∞–≤ –∫–æ–º–∞–Ω–¥—É - </i>'
                                      '/send'
                                      '\n<i> –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ -</i> /help'
                                      '\n\n\n<b>     –ì—Ä–∞—Ñ–∏–∫ –≤—ã–¥–∞—á–∏ —Ç–æ–≤–∞—Ä–∞:</b>'
                                      '\n\n üïê–ë—É–¥–Ω–∏–µ –¥–Ω–∏ —Å 16:00 –¥–æ 21:00'
                                      '\n üïê–í—ã—Ö–æ–¥–Ω—ã–µ, –ø—Ä–∞–∑–¥–Ω–∏–∫–∏ —Å 12:00 –¥–æ 23:00'
                                      '\n\n<b>     –ú–µ—Å—Ç–∞ –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏:</b>'
                                      '\n\n üìçBerlin Zoologischer Garten'
                                      '\n üìçPotsdamer Platz'
                                      '\n üìçBrandenburger Tor'
                                      '\n üìçFriedrichstra√üe'
                                      '\n üìçHackesher Markt'
                                      '\n üìçAlexanderplatz',parse_mode='HTML')
    await callback.answer()
    
@router.callback_query(F.data == "call2")
async def firstInfo(callback: CallbackQuery):
    await callback.message.delete()
    await callback.answer()

        
        
@router.callback_query(F.data == "alle")
async def all_products(callback: CallbackQuery):
    await callback.message.edit_text('<b>–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:</b> \n\n'
                              ' <b>     Killa Edition: </b>'
                              '\nüçè Killa Apple <i>(16,8MG –¶–µ–Ω–∞: 7)</i> '
                              '\nüçâ Killa Watermelon <i>(16,8MG –¶–µ–Ω–∞: 7)</i>'
                              '\nü•É Killa Cola <i>(16,8MG –¶–µ–Ω–∞: 7)</i>'
                              '\n‚ùÑÔ∏è Killa Frosted Mint <i>(30MG –¶–µ–Ω–∞: 7)</i>'
                              '\n\n<b>     Pablo Exclusive Edition: </b>'
                              '\nüçå Pablo Banane <i>(30MG –¶–µ–Ω–∞: 7.50)</i> '
                              '\nü•ù Pablo Exclusive Kiwi <i>(30MG –¶–µ–Ω–∞: 7.50)</i>'
                              '\nü•≠ Pablo Exclusive Mango Ice <i>(30MG –¶–µ–Ω–∞: 7.50)</i>'
                              '\n\n<b>     Zeus Edition: </b>'
                              '\nü´ê Zeus Epic Berry <i>(50MG –¶–µ–Ω–∞: 7.50)</i> '
                              '\nüçÉ Zeus Tropic <i>(50MG –¶–µ–Ω–∞: 7.50)</i> '
                              '\nüçã Zeus Zitrone <i>(50MG –¶–µ–Ω–∞: 7.50)</i> '
                              '\n\n<b>     Nois Edition: </b>'
                              '\nü•≠ Nois Mango <i>(60MG –¶–µ–Ω–∞: 7.50)</i>'
                              '\n‚ùÑÔ∏è Nois Mint  <i>(60MG –¶–µ–Ω–∞: 7.50)</i>'
                              '\nüçá Nois Grape ice <i>(60MG –¶–µ–Ω–∞: 7.50)</i>'
                              '\nü´ê Nois Blueberry <i>(60MG –¶–µ–Ω–∞: 7.50)</i>'
                              '\n\n<b>     Pablo Edition: </b>'
                              '\n‚ùÑÔ∏è Pablo Ice Cold <i>(75MG –¶–µ–Ω–∞: 7.50)</i>'
                              '\n\n <b>     Cuba black Edition: </b>'
                              '\nüçí Cuba Cherry <i>(160MG –¶–µ–Ω–∞: 8.50)</i>'
                              '\nü•É Cuba Cola  <i>(160MG –¶–µ–Ω–∞: 8.50)</i>'
                              '\nüçë Cuba Peach <i>(160MG –¶–µ–Ω–∞: 8.50)</i>'
                              '\n\n<b>     Iceberg Edition: </b>'
                              '\n‚ùÑÔ∏è Iceberg Menthol <i>(160MG –¶–µ–Ω–∞: 8.50)</i>', parse_mode='HTML', reply_markup = kb.main_menu)
    await callback.answer()
    
    
    
    
@router.callback_query(F.data == "strenght")
async def open_strenght(callback: CallbackQuery):
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞!', reply_markup= kb.reply_strenght)
    await callback.answer()
    
@router.callback_query(F.data == "low")
async def low_strenght(callback: CallbackQuery):
    await callback.message.edit_text( "<b>–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:</b> \n\n <b>  Curwa Collection:</b>\nü•≠ –°–Ω—é—Å Kurwa Collection Mango Raspberry <i>(16,8MG –¶–µ–Ω–∞: 6.50)</i>\nüçì –°–Ω—é—Å Kurwa Collection Raspberry Strawberry  <i>(16,8MG –¶–µ–Ω–∞: 6.50)</i>\nüëÑ –°–Ω—é—Å Kurwa Collection Strawberry Gym <i>(16,8MG –¶–µ–Ω–∞: 6.50)</i> \n\n <b>  Velo Edition:</b>\n‚ùÑÔ∏è Velo Mint <i>(14MG –¶–µ–Ω–∞: 6.50)</i>\nüçí Velo Icy Cherry <i>(14MG –¶–µ–Ω–∞: 6.50)</i>",parse_mode='HTML', reply_markup = kb.strengt_menu)
    await callback.answer()

@router.callback_query(F.data == "medium")
async def medium_strenght(callback: CallbackQuery):
    await callback.message.edit_text('<b>–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:</b> \n\n'
                              ' <b>     Killa Edition: </b>'
                              '\nüçè Killa Apple <i>(16,8MG –¶–µ–Ω–∞: 7)</i> '
                              '\nüçâ Killa Watermelon <i>(16,8MG –¶–µ–Ω–∞: 7)</i>'
                              '\nü•É Killa Cola <i>(16,8MG –¶–µ–Ω–∞: 7)</i>'
                              '\n‚ùÑÔ∏è Killa Frosted Mint <i>(30MG –¶–µ–Ω–∞: 7)</i>'
                              '\n\n<b>     Pablo Exclusive Edition: </b>'
                              '\nüçå Pablo Banane <i>(30MG –¶–µ–Ω–∞: 7.50)</i> '
                              '\nü•ù Pablo Exclusive Kiwi <i>(30MG –¶–µ–Ω–∞: 7.50)</i>'
                              '\nü•≠ Pablo Exclusive Mango Ice <i>(30MG –¶–µ–Ω–∞: 7.50)</i>'
                              '\n\n<b>     Zeus Edition: </b>'
                              '\nü´ê Zeus Epic Berry <i>(50MG –¶–µ–Ω–∞: 7.50)</i> '
                              '\nüçÉ Zeus Tropic <i>(50MG –¶–µ–Ω–∞: 7.50)</i> '
                              '\nüçã Zeus Zitrone <i>(50MG –¶–µ–Ω–∞: 7.50)</i> '
                              '\nü•≠ Nois Mango <i>(60MG –¶–µ–Ω–∞: 7.50)</i>'
                              ,parse_mode = 'HTML', reply_markup = kb.strengt_menu)
    await callback.answer()

@router.callback_query(F.data == "high")
async def high_strenght(callback: CallbackQuery):
    await callback.message.edit_text('<b>–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:</b> \n\n'
                             ' <b>     Nois Edition: </b>'
                             '\nü•≠ Nois Mango <i>(60MG –¶–µ–Ω–∞: 7.50)</i>'
                             '\n‚ùÑÔ∏è Nois Mint  <i>(60MG –¶–µ–Ω–∞: 7.50)</i>'
                             '\nüçá Nois Grape ice <i>(60MG –¶–µ–Ω–∞: 7.50)</i>'
                             '\nü´ê Nois Blueberry <i>(60MG –¶–µ–Ω–∞: 7.50</i>'
                             '\n\n<b>     Pablo Edition: </b>'
                             '\n‚ùÑÔ∏è Pablo Ice Cold <i>(75MG –¶–µ–Ω–∞: 7.50)</i>',parse_mode = 'HTML', reply_markup = kb.strengt_menu)
    await callback.answer()

@router.callback_query(F.data == "extra")
async def extra_strenght(callback: CallbackQuery):
    await callback.message.edit_text(' <b>     Cuba black Edition: </b>'
                             '\nüçí Cuba Cherry <i>(160MG –¶–µ–Ω–∞: 8.50)</i>'
                             '\nü•É Cuba Cola  <i>(160MG –¶–µ–Ω–∞: 8.50)</i>'
                             '\nüçë Cuba Peach <i>(160MG –¶–µ–Ω–∞: 8.50)</i>'
                             '\n\n<b>     Iceberg Edition: </b>'
                             '\n‚ùÑÔ∏è Iceberg Menthol <i>(160MG –¶–µ–Ω–∞: 8.50)</i>',parse_mode = 'HTML', reply_markup = kb.strengt_menu)
    await callback.answer()
    
@router.callback_query(F.data == "usersList")
async def userList(callback: CallbackQuery):
    user_id = callback.from_user.id
    chekadmin = await rq.chekAdmin(tg_id = user_id)
    if chekadmin:
        
        users = await rq.get_all_users()

        if not users:
            await callback.message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç.")
            return

        text = "üë§ –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
        for user in users:
            name = user.name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
            username = f"@{user.userName}" if user.userName else "–Ω–µ—Ç username" 
            dataReg = user.data
            text += f"‚Ä¢ {name} | {username} | userID: <code>{user.tg_id}</code>\n –î–µ–Ω—å–≥–∏: <pre>{user.money}</pre> | –ë–æ–Ω—É—Å—ã: <pre> {user.bonuce}</pre> | –í—Ä–µ–º—è —Ä–µ–≥-–∏–∏: <pre>{dataReg}</pre>\n\n"

        await callback.message.answer(text, parse_mode='html')
    
@router.callback_query(F.data == "taste")
async def taste_menu(callback: CallbackQuery):
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞!',reply_markup = kb.reply_taste)
    await callback.answer()

@router.callback_query(F.data == "fruit")
async def fuits_taste(callback: CallbackQuery):
    await callback.message.edit_text('<b>–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:</b> \n\n'
                            '\nü•≠ –°–Ω—é—Å Kurwa Collection Mango Raspberry <i>(16,8MG –¶–µ–Ω–∞: 6.50)</i>'
                            '\nüçì –°–Ω—é—Å Kurwa Collection Raspberry Strawberry  <i>(16,8MG –¶–µ–Ω–∞: 6.50)</i>'
                            '\nüçí Velo Icy Cherry <i>(14MG –¶–µ–Ω–∞: 6.50)</i>'
                            '\nüçè Killa Apple <i>(16,8MG –¶–µ–Ω–∞: 7)</i> '
                            '\nüçâ Killa Watermelon <i>(16,8MG –¶–µ–Ω–∞: 7)</i>'
                            '\nüçå Pablo Banane <i>(30MG –¶–µ–Ω–∞: 7.50)</i> '
                            '\nü•ù Pablo Exclusive Kiwi <i>(30MG –¶–µ–Ω–∞: 7.50)</i>'
                            '\nü•≠ Pablo Exclusive Mango Ice <i>(30MG –¶–µ–Ω–∞: 7.50)</i>'
                            '\nü´ê Zeus Epic Berry <i>(50MG –¶–µ–Ω–∞: 7.50)</i> '
                            '\nüçÉ Zeus Tropic <i>(50MG –¶–µ–Ω–∞: 7.50)</i> '
                            '\nüçã Zeus Zitrone <i>(50MG –¶–µ–Ω–∞: 7.50)</i>' ,parse_mode='HTML',reply_markup = kb.taste_menu)
    await callback.answer()

@router.callback_query(F.data == "mint")
async def mint_taste(callback: CallbackQuery):
    await callback.message.edit_text('<b>–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ –≤–∫—É—Å–æ–º –ú—è—Ç–∞:</b> \n\n'
                             '\n‚ùÑÔ∏è Velo Mint <i>(14MG –¶–µ–Ω–∞: 6.50)</i>'
                             '\n‚ùÑÔ∏è Killa Frosted Mint <i>(30MG –¶–µ–Ω–∞: 7)</i>'
                             '\n‚ùÑÔ∏è Nois Mint  <i>(60MG –¶–µ–Ω–∞: 7.50)</i>'
                             '\n‚ùÑÔ∏è Pablo Ice Cold <i>(75MG –¶–µ–Ω–∞: 7.50)</i>'
                             '\n‚ùÑÔ∏è Iceberg Menthol <i>(160MG –¶–µ–Ω–∞: 8.50)</i>',parse_mode='HTML',reply_markup = kb.taste_menu)
    await callback.answer()
    
@router.callback_query(F.data == "other")
async def others_taste(callback: CallbackQuery):
    await callback.message.edit_text('<b>–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:</b> \n\n'
                             '\nü•É Killa Cola <i>(16,8MG –¶–µ–Ω–∞: 7)</i>'
                             '\nü•É Cuba Cola  <i>(160MG –¶–µ–Ω–∞: 8.50)</i>'
                             '\nüëÑ –°–Ω—é—Å Kurwa Collection Strawberry Gym <i>(16,8MG –¶–µ–Ω–∞: 6.50)</i>',parse_mode='html',reply_markup = kb.taste_menu)
    await callback.answer()



@router.callback_query(F.data == "menu_main")
async def main_products(callback: CallbackQuery):
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞!", reply_markup = kb.reply_categories)
    await callback.answer()
    
@router.callback_query(F.data == "strengt_main")
async def main_strengt(callback: CallbackQuery):
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞!", reply_markup= kb.reply_strenght)
    await callback.answer()

@router.callback_query(F.data == "taste_main")
async def main_taste(callback: CallbackQuery):
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞!", reply_markup= kb.reply_taste)
    await callback.answer()
    
    
@router.callback_query(F.data == "main_menu")
async def main_menu(callback: CallbackQuery):
    await callback.message.delete()
    
    